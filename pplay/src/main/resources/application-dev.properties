####################################
#DataSource
####################################
#spring.datasource.url=jdbc:mysql://localhost:3306/yimengweimagame?useUnicode=true&useSSL=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&autoReconnect=true&allowMultiQueries=true
spring.datasource.url=jdbc:mysql://localhost:3306/yimosystemdb?useUnicode=true&useSSL=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&autoReconnect=true&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

####################################
#Jackson
####################################
# 全局jackson配置(这个后面的值必须大写，有点坑爹)
spring.jackson.default-property-inclusion=NON_NULL 

####################################
#Shiro
####################################

####################################
#session
####################################
server.session-timeout=7200
#session存储类型
spring.session.store-type=redis

####################################
#MyBatis
####################################

#自动将以下划线方式命名的数据库列映射到Java对象的驼峰式命名属性中
mybatis.configuration.map-underscore-to-camel-case= true

#mapper
#mappers 多个接口时逗号隔开
#mapper.mappers=com.yimoom.pplay.base.MyMapper
#mapper.not-empty=false
#mapper.identity=MYSQL
#配置模型路径
mybatis.type-aliases-package=com.yimengweima.domain
#配置.xml文件路径
mybatis.mapper-locations=classpath:mybatis/**/*Mapper.xml

mybatis.config-locations=classpath:mybatis/mybatis-config.xml
#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql



####################################
#ExceptionHandler
####################################
#如果DispatcherServlet未找到对应的处理器，抛出异常，交给全局异常处理
spring.mvc.throw-exception-if-no-handler-found=false
#关闭默认的资源处理，否则抛出异常会自动映射到/error
spring.resources.add-mappings=false

####################################
#Redis(Cache)
####################################
#redis内存数据库地址配置
spring.redis.database=1
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.jedis.pool.max-active=8
spring.redis.jedis.pool.max-idle=8
spring.redis.jedis.pool.max-wait=-1ms
spring.redis.timeout=5000ms
spring.cache.type=redis
#Redis 存储根路径
redis.root=pplay

####################################
# logging
####################################
logging.level.org.springframework.security= INFO

####################################
# Security
####################################
#security.basic.enabled=false



####################################
#thymeleaf
####################################
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false


####################################
# Aop
####################################
# Add @EnableAspectJAutoProxy.
spring.aop.auto=true 
# Whether subclass-based (CGLIB) proxies are to be created (true) as
#opposed to standard Java interface-based proxies (false).
#强制使用CGLIB代理效率慢8倍
spring.aop.proxy-target-class=false 


####################################
# Druid
####################################
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# 初始化连接大小[0]
spring.datasource.druid.initial-size=1
# 最小空闲连接数[0]
spring.datasource.druid.min-idle=1
# 最大连接数[8]
spring.datasource.druid.max-active=20

# 配置获取连接等待超时的时间(毫秒)[-1]
spring.datasource.druid.max-wait=60000
# 查询超时时间(秒)
spring.datasource.druid.query-timeout=90

# 用来检测连接是否有效的sql，要求是一个查询语句
spring.datasource.druid.validation-query=SELECT 'x'
# 申请连接时检测连接可用性[false]
spring.datasource.druid.test-on-borrow=false
# 归还连接检测[false]
spring.datasource.druid.test-on-return=false
# 超时是否检测连接可用性[true]
spring.datasource.druid.test-while-idle=true

# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接 (毫秒)
spring.datasource.druid.time-between-eviction-runs-millis=60000
#  配置一个连接在池中最小生存的时间(毫秒，默认30分钟)
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat；日志用的filter:log4j；防御sql注入的filter:wall
spring.datasource.druid.filters=stat,wall,slf4j
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 是否缓存PreparedStatement. PSCache对支持游标的数据库性能提升巨大，比如说oracle.在mysql下建议关闭.
spring.datasource.druid.pool-prepared-statements=false
# 每个连接上PSCache的大小
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20

# StatViewServlet [https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_StatViewServlet%E9%85%8D%E7%BD%AE]
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 监控页面的用户名和密码
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin
spring.datasource.druid.stat-view-servlet.reset-enable=false

# StatFilter [https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_StatFilter]
spring.datasource.druid.filter.stat.db-type=mysql
#慢SQL记录
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000
# SQL合并
spring.datasource.druid.filter.stat.merge-sql=false

# WallFilter [https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE-wallfilter]
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=mysql
spring.datasource.druid.filter.wall.config.delete-allow=false
spring.datasource.druid.filter.wall.config.drop-table-allow=false